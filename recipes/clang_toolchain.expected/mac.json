[
  {
    "cmd": [],
    "name": "ensure_gsutil"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "--root",
      "[START_DIR]/cipd/gsutil",
      "--list",
      "infra/tools/gsutil latest",
      "--json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_gsutil.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"infra/tools/gsutil\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "ensure_jiri"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "--root",
      "[START_DIR]/cipd/jiri",
      "--list",
      "fuchsia/tools/jiri/mac-amd64 stable",
      "--json-output",
      "/path/to/tmp/json"
    ],
    "infra_step": true,
    "name": "ensure_jiri.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-stable----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"fuchsia/tools/jiri/mac-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "init",
      "-cache",
      "[CACHE]/git",
      "-shared"
    ],
    "infra_step": true,
    "name": "jiri init"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "import",
      "-overwrite=true",
      "toolchain",
      "https://fuchsia.googlesource.com/manifest"
    ],
    "infra_step": true,
    "name": "jiri import"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "project",
      "-clean-all"
    ],
    "infra_step": true,
    "name": "jiri project clean"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "update",
      "-autoupdate=false",
      "-gc=true"
    ],
    "infra_step": true,
    "name": "jiri update"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/jiri/jiri",
      "snapshot",
      "[TMP_BASE]/jiri.snapshot"
    ],
    "infra_step": true,
    "name": "jiri snapshot"
  },
  {
    "cmd": [
      "vpython",
      "-spec",
      "RECIPE_MODULE[infra::gsutil]/resources/gsutil.vpython",
      "-u",
      "[START_DIR]/cipd/gsutil/gsutil",
      "-o",
      "GSUtil:software_update_check_period=0",
      "cp",
      "[TMP_BASE]/jiri.snapshot",
      "gs://fuchsia/jiri/snapshots/8ac5404b688b34f2d34d1c8a648413aca30b7a97"
    ],
    "infra_step": true,
    "name": "upload jiri.snapshot",
    "~followup_annotations": [
      "@@@STEP_LINK@jiri.snapshot@https://storage.googleapis.com/fuchsia/jiri/snapshots/8ac5404b688b34f2d34d1c8a648413aca30b7a97@@@"
    ]
  },
  {
    "cmd": [],
    "name": "ensure_packages"
  },
  {
    "cmd": [
      "cipd",
      "ensure",
      "--root",
      "[START_DIR]/cipd",
      "--list",
      "fuchsia/tools/cmake/${platform} latest\nfuchsia/tools/ninja/${platform} latest",
      "--json-output",
      "/path/to/tmp/json",
      "--service-account-json",
      "/creds/service_accounts/service-account-cipd-builder.json"
    ],
    "infra_step": true,
    "name": "ensure_packages.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"fuchsia/tools/cmake/${platform}\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }, @@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"fuchsia/tools/ninja/${platform}\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[TMP_BASE]/clang_tmp_1/clang+llvm-x86_64-darwin"
    ],
    "infra_step": true,
    "name": "create pkg dir"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[TMP_BASE]/clang_tmp_1/binutils_build_dir"
    ],
    "infra_step": true,
    "name": "create binutils build dir"
  },
  {
    "cmd": [
      "[START_DIR]/third_party/binutils-gdb/configure",
      "--prefix=",
      "--program-prefix=",
      "--enable-targets=aarch64-elf,x86_64-elf,x86_64-darwin",
      "--enable-deterministic-archives",
      "--disable-werror",
      "--disable-nls"
    ],
    "cwd": "[TMP_BASE]/clang_tmp_1/binutils_build_dir",
    "name": "configure binutils"
  },
  {
    "cmd": [
      "make",
      "-j2",
      "all-binutils"
    ],
    "cwd": "[TMP_BASE]/clang_tmp_1/binutils_build_dir",
    "name": "build binutils"
  },
  {
    "cmd": [
      "make",
      "install-strip-binutils"
    ],
    "cwd": "[TMP_BASE]/clang_tmp_1/binutils_build_dir",
    "env": {
      "DESTDIR": "[TMP_BASE]/clang_tmp_1/binutils_install_dir"
    },
    "name": "install binutils"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[TMP_BASE]/clang_tmp_1/clang+llvm-x86_64-darwin/bin"
    ],
    "infra_step": true,
    "name": "create bin dir"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "[TMP_BASE]/clang_tmp_1/binutils_install_dir/bin/objcopy",
      "[TMP_BASE]/clang_tmp_1/clang+llvm-x86_64-darwin/bin/objcopy"
    ],
    "infra_step": true,
    "name": "copy objcopy"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "copy",
      "[TMP_BASE]/clang_tmp_1/binutils_install_dir/bin/strip",
      "[TMP_BASE]/clang_tmp_1/clang+llvm-x86_64-darwin/bin/strip"
    ],
    "infra_step": true,
    "name": "copy strip"
  },
  {
    "cmd": [
      "make",
      "-j2",
      "magenta-qemu-arm64"
    ],
    "cwd": "[START_DIR]/magenta",
    "name": "build magenta-qemu-arm64"
  },
  {
    "cmd": [
      "make",
      "-j2",
      "magenta-pc-x86-64"
    ],
    "cwd": "[START_DIR]/magenta",
    "name": "build magenta-pc-x86-64"
  },
  {
    "cmd": [
      "python",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]/resources/fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0777",
      "[TMP_BASE]/clang_tmp_1/llvm_build_dir"
    ],
    "infra_step": true,
    "name": "create llvm build dir"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/bin/cmake",
      "-GNinja",
      "-DCMAKE_C_COMPILER=[START_DIR]/buildtools/mac-x64/clang/bin/clang",
      "-DCMAKE_CXX_COMPILER=[START_DIR]/buildtools/mac-x64/clang/bin/clang++",
      "-DCMAKE_ASM_COMPILER=[START_DIR]/buildtools/mac-x64/clang/bin/clang",
      "-DCMAKE_MAKE_PROGRAM=[START_DIR]/cipd/ninja",
      "-DCMAKE_INSTALL_PREFIX=",
      "-DFUCHSIA_x86_64_SYSROOT=[START_DIR]/magenta/build-magenta-pc-x86-64/sysroot",
      "-DFUCHSIA_aarch64_SYSROOT=[START_DIR]/magenta/build-magenta-qemu-arm64/sysroot",
      "-C",
      "[START_DIR]/third_party/llvm/tools/clang/cmake/caches/Fuchsia.cmake",
      "[START_DIR]/third_party/llvm"
    ],
    "cwd": "[TMP_BASE]/clang_tmp_1/llvm_build_dir",
    "name": "configure clang"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/ninja",
      "stage2-distribution"
    ],
    "cwd": "[TMP_BASE]/clang_tmp_1/llvm_build_dir",
    "name": "build clang"
  },
  {
    "cmd": [
      "[START_DIR]/cipd/ninja",
      "stage2-install-distribution"
    ],
    "cwd": "[TMP_BASE]/clang_tmp_1/llvm_build_dir",
    "env": {
      "DESTDIR": "[TMP_BASE]/clang_tmp_1/clang+llvm-x86_64-darwin"
    },
    "name": "install clang"
  },
  {
    "cmd": [
      "[TMP_BASE]/clang_tmp_1/llvm_build_dir/bin/clang",
      "--version"
    ],
    "name": "clang version",
    "stdout": "/path/to/tmp/"
  },
  {
    "cmd": [
      "cipd",
      "search",
      "fuchsia/clang/mac-amd64",
      "--tag",
      "clang_revision:302207",
      "--json-output",
      "/path/to/tmp/json",
      "--service-account-json",
      "/creds/service_accounts/service-account-cipd-builder.json"
    ],
    "name": "cipd search fuchsia/clang/mac-amd64 clang_revision:302207",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": [@@@",
      "@@@STEP_LOG_LINE@json.output@    {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"instance_id\": \"40-chars-fake-of-the-package-instance_id\", @@@",
      "@@@STEP_LOG_LINE@json.output@      \"package\": \"fuchsia/clang/mac-amd64\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  ]@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]